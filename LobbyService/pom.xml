<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>eu.kartoffelquadrat</groupId>
    <artifactId>ls</artifactId>
    <version>1.0.0</version>
    <packaging>${packaging.type}</packaging>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>

    <!-- Parent for Spring Boot -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.7.RELEASE</version>
    </parent>

    <dependencies>

        <!-- Embedded web-server -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>2.1.7.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>2.1.7.RELEASE</version>
        </dependency>

        <!-- authentication / authorization -->
        <dependency>
            <groupId>org.springframework.security.oauth.boot</groupId>
            <artifactId>spring-security-oauth2-autoconfigure</artifactId>
            <version>2.3.0.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
            <version>2.3.0.RELEASE</version>
        </dependency>

        <!-- inter service communication -->
        <dependency>
            <groupId>com.konghq</groupId>
            <artifactId>unirest-java</artifactId>
            <version>3.7.02</version>
        </dependency>

        <!-- Asynchronous long polls -->
        <dependency>
            <groupId>eu.kartoffelquadrat</groupId>
            <artifactId>asyncrestlib</artifactId>
            <version>1.5.1</version>
        </dependency>

        <!-- fast hashing-->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>11.0</version>
        </dependency>

        <!-- user persistence to an actual DB-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.27</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
	    <version>2.6.1</version>
        </dependency>

        <!-- read / write of json game savestates-->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.6</version>
        </dependency>
    </dependencies>

    <!-- required to property start up the application in a spring boot context -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <fork>true</fork>
                    <mainClass>eu.kartoffelquadrat.ls.gameregistry.controller.PlatformLauncher</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <finalName>${project.artifactId}</finalName>
    </build>

    <profiles>
        <!--dev profile is intended for native deployment of LS. (Native LS from JAR, DB in container)-->
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <activatedProperties>dev</activatedProperties>
                <packaging.type>jar</packaging.type>
            </properties>
        </profile>
        <!--prod profile is intended for dockerized deployment of LS. (LS in container, DB in container)-->
        <profile>
            <id>prod</id>
            <properties>
                <activatedProperties>prod</activatedProperties>
                <packaging.type>jar</packaging.type>
            </properties>
        </profile>
        <!--derby profile is intended for native deployment of LS with file based derby database instead of mySQL connection.-->
        <profile>
            <id>derby</id>
            <properties>
                <activatedProperties>derby</activatedProperties>
                <packaging.type>jar</packaging.type>
            </properties>
            <dependencies>
                <!-- local DB -->
                <dependency>
                    <groupId>org.apache.derby</groupId>
                    <artifactId>derbyclient</artifactId>
                    <version>10.15.2.0</version>
                </dependency>
            </dependencies>
        </profile>
        <!--war profile is intended for native deployment of LS, on an existing tomcat instance with native DB.-->
        <profile>
            <id>war</id>
            <properties>
                <activatedProperties>war</activatedProperties>
                <packaging.type>war</packaging.type>
            </properties>
            <dependencies>
                <!-- Build to WAR has extra tomcat dependency-->
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                    <scope>provided</scope>
                </dependency>
                <!-- war deployment connects to local mysql DB. Extra connector dependency -->
                <dependency>
                    <groupId>mysql</groupId>
                    <artifactId>mysql-connector-java</artifactId>
                    <version>8.0.25</version>
                </dependency>
            </dependencies>
        </profile>
    </profiles>

</project>

